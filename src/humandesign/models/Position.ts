/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ObjectSpeed, Scientific, Position as ApiPosition } from '$lib/astro'
import { Angle } from './Angle';
import { SignedAngle } from '$lib/astro';
import { opposite } from './Zodiac';
import { Zodiac } from './types';

export class Position {
    readonly lng: Angle;
    readonly lat: SignedAngle;
    readonly distance: Scientific;
    readonly speed: ObjectSpeed;
    readonly zodiac: Zodiac;
    readonly zodiacLng: Angle;

    public constructor(lng: Angle, lat: SignedAngle, distance: Scientific, speed: ObjectSpeed, zodiac: Zodiac, zodiacLng: Angle) {
        this.lng = lng
        this.lat = lat
        this.distance = distance
        this.speed = speed
        this.zodiac = zodiac
        this.zodiacLng = zodiacLng
    }

    opposite(): Position {
        let lat = new SignedAngle()
        lat.deg = this.lat.deg
        lat.min = this.lat.min
        lat.sec = this.lat.sec
        lat.sign = this.lat.sign * -1

        return new Position(
            this.lng.plus(Angle.opposite),
            lat,
            this.distance,
            this.speed,
            opposite(this.zodiac),
            this.zodiacLng
        )
    }

    static fromApi(position: ApiPosition) : Position {
        return new Position(
            Angle.fromApi(position.lng), 
            position.lat, 
            position.distance,
            position.speed,
            Zodiac[position.zodiac],
            Angle.fromApi(position.zodiacLng)
        )
    }
}

